-- Rayfield-like UI Library for Roblox
-- Minimal elegant UI focusing on modern aesthetics and developer experience
-- Single Script Version

local RayfieldLike = {}

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Constants for colors and styles
local COLORS = {
    Background = Color3.fromHex("FFFFFF"),
    PanelBg = Color3.fromHex("F9FAFB"), -- very light gray for panels
    TextPrimary = Color3.fromHex("111827"), -- very dark gray for headlines
    TextSecondary = Color3.fromHex("6B7280"), -- neutral gray body text
    ButtonBg = Color3.fromHex("1F2937"), -- dark gray/black for buttons
    ButtonHover = Color3.fromHex("374151"), -- lighter dark gray
    Accent = Color3.fromHex("2563EB"), -- blue accent for toggles
    Shadow = Color3.fromRGB(0,0,0),
}

local FONT = Enum.Font.Gotham
local LARGE_FONT_SIZE = 48
local MEDIUM_FONT_SIZE = 24
local BODY_FONT_SIZE = 18

local EASING = Enum.EasingStyle.Quad
local TWEEN_TIME = 0.25

-- Utility function to create rounded corners with UIStroke / UICorner
local function createUICorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius
    corner.Parent = parent
    return corner
end

-- Utility function to create a TextButton with styling
local function createButton(text, parent)
    local btn = Instance.new("TextButton")
    btn.BackgroundColor3 = COLORS.ButtonBg
    btn.TextColor3 = COLORS.Background
    btn.Font = FONT
    btn.TextSize = BODY_FONT_SIZE
    btn.Text = text
    btn.AutoButtonColor = false
    btn.Size = UDim2.new(0, 140, 0, 40)
    btn.AnchorPoint = Vector2.new(0.5, 0.5)
    btn.BorderSizePixel = 0
    btn.Parent = parent

    createUICorner(btn, UDim.new(0, 8))

    -- Hover animation
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(TWEEN_TIME, EASING), {BackgroundColor3 = COLORS.ButtonHover}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(TWEEN_TIME, EASING), {BackgroundColor3 = COLORS.ButtonBg}):Play()
    end)

    return btn
end

-- Utility function to create a toggle switch
local function createToggle(title, parent, initialState, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 36)
    frame.BackgroundTransparency = 1
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Font = FONT
    label.TextSize = BODY_FONT_SIZE
    label.TextColor3 = COLORS.TextSecondary
    label.BackgroundTransparency = 1
    label.Text = title
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 40, 0, 20)
    toggleButton.Position = UDim2.new(1, -50, 0.5, 0)
    toggleButton.AnchorPoint = Vector2.new(0, 0.5)
    toggleButton.BackgroundColor3 = Color3.fromRGB(209, 213, 219) -- gray background for off
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = frame
    createUICorner(toggleButton, UDim.new(0, 10))

    local circle = Instance.new("Frame")
    circle.Size = UDim2.new(0, 16, 0, 16)
    circle.Position = UDim2.new(0, 2, 0.5, 0)
    circle.AnchorPoint = Vector2.new(0, 0.5)
    circle.BackgroundColor3 = COLORS.Background
    circle.Parent = toggleButton
    createUICorner(circle, UDim.new(0, 8))

    local state = initialState and true or false
    local function updateVisual()
        if state then
            toggleButton.BackgroundColor3 = COLORS.Accent
            circle:TweenPosition(UDim2.new(1, -18, 0.5, 0), Enum.EasingDirection.Out, EASING, TWEEN_TIME, true)
            label.TextColor3 = COLORS.TextPrimary
        else
            toggleButton.BackgroundColor3 = Color3.fromRGB(209, 213, 219)
            circle:TweenPosition(UDim2.new(0, 2, 0.5, 0), Enum.EasingDirection.Out, EASING, TWEEN_TIME, true)
            label.TextColor3 = COLORS.TextSecondary
        end
    end

    updateVisual()

    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            state = not state
            updateVisual()
            if callback then
                callback(state)
            end
        end
    end)

    return frame, function() return state end
end

-- Create a labeled input box
local function createInputBox(title, placeholder, parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 44)
    frame.BackgroundTransparency = 1
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Font = FONT
    label.TextSize = BODY_FONT_SIZE
    label.TextColor3 = COLORS.TextSecondary
    label.BackgroundTransparency = 1
    label.Text = title
    label.Size = UDim2.new(1, 0, 0, 20)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, 0, 0, 24)
    textBox.Position = UDim2.new(0, 0, 0, 20)
    textBox.BackgroundColor3 = COLORS.PanelBg
    textBox.TextColor3 = COLORS.TextPrimary
    textBox.Font = FONT
    textBox.TextSize = BODY_FONT_SIZE
    textBox.ClearTextOnFocus = false
    textBox.PlaceholderText = placeholder or ""
    textBox.Parent = frame
    textBox.BorderSizePixel = 0
    createUICorner(textBox, UDim.new(0, 6))

    return frame, textBox
end

-- Create a main window container
function RayfieldLike.CreateWindow(title)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RayfieldLikeUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game:GetService("CoreGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.BackgroundColor3 = COLORS.Background
    mainFrame.Size = UDim2.new(0, 480, 0, 540)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.Parent = screenGui
    createUICorner(mainFrame, UDim.new(0, 16))
    mainFrame.ClipsDescendants = true

    -- Shadow effect (simple)
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 16, 1, 16)
    shadow.Position = UDim2.new(0, -8, 0, -8)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://11294975253" -- drop shadow asset id (simple blurred)
    shadow.ImageColor3 = Color3.new(0,0,0)
    shadow.ImageTransparency = 0.85
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(20, 20, 280, 280)
    shadow.Parent = mainFrame
    shadow.ZIndex = mainFrame.ZIndex - 1

    -- Header
    local header = Instance.new("Frame")
    header.BackgroundTransparency = 1
    header.Size = UDim2.new(1, 0, 0, 80)
    header.Parent = mainFrame

    local headerText = Instance.new("TextLabel")
    headerText.Font = FONT
    headerText.TextSize = LARGE_FONT_SIZE
    headerText.TextColor3 = COLORS.TextPrimary
    headerText.Text = title or "RayfieldLike UI"
    headerText.BackgroundTransparency = 1
    headerText.Size = UDim2.new(1, -40, 1, 0)
    headerText.Position = UDim2.new(0, 20, 0, 0)
    headerText.TextXAlignment = Enum.TextXAlignment.Left
    headerText.TextYAlignment = Enum.TextYAlignment.Center
    headerText.RichText = false
    headerText.Parent = header

    -- Container for content elements
    local content = Instance.new("ScrollingFrame")
    content.Size = UDim2.new(1, -40, 1, -100)
    content.Position = UDim2.new(0, 20, 0, 80)
    content.BackgroundTransparency = 1
    content.ScrollBarThickness = 6
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.Parent = mainFrame
    content.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

    local layout = Instance.new("UIListLayout")
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 18)
    layout.Parent = content

    -- Update canvas size on layout change
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        content.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
    end)

    -- Table to hold created elements
    local elements = {}

    -- API: Add a Button
    local function AddButton(buttonText, onClick)
        local btn = createButton(buttonText, content)
        btn.LayoutOrder = #elements + 1
        btn.MouseButton1Click:Connect(function()
            if onClick then pcall(onClick) end
        end)
        table.insert(elements, btn)
        return btn
    end

    -- API: Add a Toggle
    local function AddToggle(toggleText, defaultState, onToggle)
        local toggleFrame, stateFunc = createToggle(toggleText, content, defaultState, onToggle)
        toggleFrame.LayoutOrder = #elements + 1
        table.insert(elements, toggleFrame)
        return stateFunc
    end

    -- API: Add an InputBox
    local function AddInputBox(labelText, placeholderText)
        local inputFrame, textBox = createInputBox(labelText, placeholderText, content)
        inputFrame.LayoutOrder = #elements + 1
        table.insert(elements, inputFrame)
        return textBox
    end

    -- API table
    local api = {
        AddButton = AddButton,
        AddToggle = AddToggle,
        AddInputBox = AddInputBox,
        Destroy = function()
            screenGui:Destroy()
        end
    }

    return api
end

return RayfieldLike
